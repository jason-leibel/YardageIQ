name: 📊 Coverage Badge Workflow

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Build PHP container
        run: docker compose --env-file .env build php

      - name: 📦 Install Composer dependencies
        run: docker compose run --rm php composer install --no-interaction --prefer-dist

      - name: 🏗️ Build Node container
        run: docker compose --env-file .env build node

      - name: 📦 Install Node dependencies
        run: docker compose run --rm node npm ci --no-audit --prefer-offline

      - name: 🧱 Run Node build
        run: docker compose run --rm node npm run build

      - name: ✅ Run PHPUnit with coverage
        run: docker compose run --rm php php artisan test --coverage-clover=coverage.xml

      - name: 📊 Extract coverage percentage
        id: coverage
        run: |
          echo "🔍 Extracting final <metrics> block for total project coverage..."

          METRICS=$(grep -oP '<metrics[^>]+' coverage.xml | tail -n1)

          TOTAL=$(echo "$METRICS" | grep -oP 'statements="\K\d+"')
          COVERED=$(echo "$METRICS" | grep -oP 'coveredstatements="\K\d+"')

          echo "Raw metrics: $METRICS"
          echo "Extracted:"
          echo "  TOTAL = $TOTAL"
          echo "  COVERED = $COVERED"

          if [ -z "$TOTAL" ] || [ -z "$COVERED" ] || [ "$TOTAL" -eq 0 ]; then
            echo "❌ Failed to extract valid metrics"
            echo "coverage=0" >> $GITHUB_OUTPUT
            exit 1
          fi

          COVERAGE=$(echo "scale=2; ($COVERED/$TOTAL)*100" | bc -l)
          COVERAGE_ROUNDED=$(printf "%.0f" "$COVERAGE")

          echo "📈 Coverage: $COVERED / $TOTAL = ${COVERAGE_ROUNDED}%"
          echo "coverage=${COVERAGE_ROUNDED}" >> $GITHUB_OUTPUT



      - name: 🛡️ Create coverage badge
        env:
          COVERAGE: ${{ steps.coverage.outputs.coverage }}
        run: |
          mkdir -p public/badges
          curl -o public/badges/coverage.svg "https://img.shields.io/badge/coverage-${COVERAGE}%25-brightgreen"

      - name: 🚀 Commit and push coverage badge
        env:
          COVERAGE: ${{ steps.coverage.outputs.coverage }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/badges/coverage.svg
          git commit -m "📊 Update coverage badge to ${COVERAGE}%"
          git push origin main
